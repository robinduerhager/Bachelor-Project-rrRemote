stages:
  - build
  #- test
  - prepare
  - deploy
  - update

build:application:
  stage: build
  #only:
  #    - master
  tags:
      - mounts-RR-RRPROJECTS
  image: node:$NODE_VERSION-alpine
  script:
      - echo $RRREMOTE_FIREBASE_CREDS > fbc.json
      - npm install
      - npm install /mnt/RR/bin/nodeJS/lx64/v6
      - npm run build
  artifacts:
      paths:
          - node_modules/rrbindings/
          - node_modules/rrshared/
          - build/
          - fbc.json
      expire_in: 20 minutes

prepare:dockerimage:
  stage: prepare
  only:
      - master
  tags:
      - docker
  image: docker:stable
  dependencies:
      - build:application
  services:
      - docker:dind
  before_script:
      - docker info
      - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
      - docker build -t $CI_REGISTRY_IMAGE .
      - docker push $CI_REGISTRY_IMAGE

deploy:renderjobservice:
  stage: deploy
  only:
    - master
  tags:
      - internal-shell
  before_script:
      - docker info
      - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
      - cd /home/rrremote
      - docker-compose pull renderjobservice
      - docker-compose up -d --no-deps renderjobservice

update:schema:
  stage: update
  only:
      - master
  tags:
      - docker
  image: node:10.15.3-alpine
  script:
      - apk add git
      - npm install -g apollo
      - apollo service:push --key $ENGINE_API_KEY --localSchemaFile=./src/interfaces/graphql/schema.graphql --serviceName=rrRemoteRenderjob --serviceURL=http://rrremoterenderjob:8080/graphql
