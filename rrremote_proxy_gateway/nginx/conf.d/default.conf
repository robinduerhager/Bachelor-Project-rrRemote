server {
    listen 80;
    listen [::]:80;

    server_name localhost;

    # To allow special characters in headers
    ignore_invalid_headers off;

    # unrestricted Filesize. THIS HAS TO BE FIXED IN THE FUTURE. NGINX stores the uploaded data in a temporary File, until the upload completes. Since Renderings and Renderprojects can get huge in Filesize, a solution has to be found where it stores only temporary chunks, or the Filesize gets restricted
    client_max_body_size 0;

    # API Gateway buffering can lead to problems during Streaming sessions
    proxy_buffering off;

    # MinIO Directive
    # Has to be /, since MinIO concatenates its own directives to the URL. If set to /minio, MinIO will actually add another /minio directive to the URL which breaks the reverse Proxy config
    location / {
        # Forwarding of headers, like Host, IP-Address, etc.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        # HTTP 1.1 implements keepalive, with which the connection to the Server does not get closed directly after finishing a Request. It's more efficient to keep those connections alive, since setting up internet connections is an intensive process
        proxy_http_version 1.1;

        # Connection header has to be cleared when using keepalive, mentioned in the NGINX Docs
        proxy_set_header Connection "";

        # Forwarding of the Request to the Docker-Container with the container-name 'minio', specified in the docker-compose.yml
        proxy_pass http://minio:9000;
        proxy_connect_timeout  300;
    }

    # Apollo Gateway Directive
    location /rrremote/graphql {
        # Forwarding of headers, like Host, IP-Address, etc.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;

        # Forwarding of the Request to the Docker-Container with the container-name 'graphqlgateway', specified in the docker-compose.yml
        proxy_pass http://graphqlgateway:8080/graphql;

        # GraphQL-Requests should not trigger a redirect, since they are not send over a UI, hosted by the Container
        proxy_redirect off;
    }

    # based on https://stackoverflow.com/questions/49742269/rabbitmq-management-over-https-and-nginx
    location ~* /rabbitmq/api/(.*?)/(.*) {
        proxy_pass http://rabbitmq:15672/api/$1/%2F/$2?$query_string;
        proxy_buffering                    off;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* /rabbitmq/(.*) {
        rewrite ^/rabbitmq/(.*)$ /$1 break;
        proxy_pass http://rabbitmq:15672;
        proxy_buffering                    off;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
